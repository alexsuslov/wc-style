// Generated by CoffeeScript 1.8.0

/*
Create DOM > head> style object.
JS dinamic manipulation css.
 */

(function() {
  var WC;

  WC = window.WC || {};

  WC.style = {
    name: 'wcStyle',
    data: {
      ".wcStyle": {
        "//version": '0.0.2'
      }
    },

    /*
    	initialize
      @param opt[Object] params
      @return [Object] this
     */
    init: function(opt) {
      var css, head, _ref, _ref1;
      this.opt = opt;
      if ((_ref = this.opt) != null ? _ref.css : void 0) {
        this.data = this.opt.css;
      }
      if (window['localStorage']) {
        this.Storage = window['localStorage'];
      }
      css = '\n\t.wcStyle .version{//0.0.1}\n';
      head = document.head || document.getElementsByTagName('head')[0];
      this.style = document.createElement('style');
      this.style.type = 'text/css';
      this.style.setAttribute('id', 'wcStyle');
      this.addCss(css);
      head.appendChild(this.style);
      if ((_ref1 = this.opt) != null ? _ref1.storage : void 0) {
        this.restore();
      }
      this.render();
      return this;
    },

    /*
    	Css data save to localstorage
     @return [Object] this
     */
    save: function() {
      if (this.Storage) {
        this.Storage.setItem(this.name, this.data);
      }
      return this;
    },

    /*
    	Css data restore from localstorage
     @return [Object] this
     */
    restore: function() {
      var dt;
      if (dt = this.Storage.getItem(this.name)) {
        if (this.Storage) {
          this.data = this.Storage.getItem(this.name);
        }
      }
      return this;
    },

    /*
    	Css data insert to DOM > head> style
    	@param [String] css text
     @return [Object] this
     */
    addCss: function(css) {
      if (this.style.styleSheet) {
        this.style.styleSheet.cssText = css;
      } else {
        this.style.appendChild(document.createTextNode(css));
      }
      return this;
    },

    /*
    	Clean DOM > head> style
    	@return [Object] this
     */
    empty: function() {
      while (this.style.firstChild) {
        this.style.removeChild(this.style.firstChild);
      }
      return this;
    },

    /*
    	Css data convert to text and put to DOM > head> style
    	@return [Object] this
     */
    render: function() {
      var css, name;
      if (!this.style) {
        this.init();
      }
      this.empty();
      css = '';
      for (name in this.data) {
        css += (typeof this.data[name] === 'string' ? "\n" + name + this.data[name] : ("\n" + name) + this.css(this.data[name]));
      }
      this.addCss(css);
      return this;
    },

    /*
    	Get/ set
    	@param [String] name
    	@param [Object] value
    	@return [Object] this
     */
    val: function(name, val) {
      var item;
      if (!name) {
        return this;
      }
      if (Object.prototype.toString.call(name) === '[object String]') {
        if (!val) {
          return this.data[name];
        }
        this.data[name] = val;
      } else {
        for (item in name) {
          this.data[item] = name[item];
        }
      }
      this.render();
      this.save();
      return this;
    },

    /*
    	Json css to text convert
    	@param [Object] data
    	@return [Sring] css
     */
    css: function(data) {
      var cs, cssText;
      cssText = ["{"];
      for (cs in data) {
        cssText.push("" + cs + ":" + data[cs] + ";");
      }
      cssText.push('}');
      return cssText.join('');
    },

    /*
    	Helper text selection disable
    	@return [Object] this
     */
    disableSelection: function() {
      return $('body').css({
        '-ms-user-select': 'none',
        '-moz-user-select': '-moz-none',
        '-khtml-user-select': 'none',
        '-webkit-user-select': 'none',
        'user-select': 'none'
      });
    },

    /*
    	Helper text selection enable
    	@return [Object] this
     */
    enableSelection: function() {
      return $('body').css({
        '-ms-user-select': 'auto',
        '-moz-user-select': 'auto',
        '-khtml-user-select': 'auto',
        '-webkit-user-select': 'auto',
        'user-select': 'auto'
      });
    }
  };

  window.WC = WC;

}).call(this);

//# sourceMappingURL=ws-style.js.map
